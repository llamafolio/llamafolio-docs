"use strict";(self.webpackChunkllamafolio_docs=self.webpackChunkllamafolio_docs||[]).push([[233],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),i=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=i(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n(67294)},65488:(e,t,n)=>{n(67294),n(72389)},34797:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var a=n(87462),r=(n(67294),n(3905));n(65488),n(85162);const o={title:"Balances",sidebar_position:2},l="Balances",s={unversionedId:"tutorials/aave/balances",id:"tutorials/aave/balances",title:"Balances",description:"The goal of getBalances is to resolve amounts to contracts returned previously e.g. amount of tokens, underlyings and rewards.",source:"@site/docs/tutorials/aave/balances.mdx",sourceDirName:"tutorials/aave",slug:"/tutorials/aave/balances",permalink:"/docs/tutorials/aave/balances",draft:!1,editUrl:"https://github.com/llamafolio/llamafolio-docs/tree/master/docs/tutorials/aave/balances.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Balances",sidebar_position:2},sidebar:"tutorial",previous:{title:"Contracts",permalink:"/docs/tutorials/aave/contracts"},next:{title:"Wrap up",permalink:"/docs/tutorials/aave/wrap-up"}},c={},i=[],u={toc:i};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"balances"},"Balances"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"goal")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"getBalances")," is to resolve amounts to contracts returned previously e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"amount")," of tokens, underlyings and rewards."),(0,r.kt)("p",null,"Because aTokens, stable and variable debt tokens are ERC20 contracts, we can use ",(0,r.kt)("inlineCode",{parentName:"p"},"balanceOf")," method to retrieve user balances."),(0,r.kt)("p",null,"We can then add amount to the contract and the underlying."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/adapters/aave-v2/ethereum.ts"',title:'"/src/adapters/aave-v2/ethereum.ts"'},'import { getERC20BalanceOf } from "@lib/erc20";\n\nasync function getLendingPoolBalances(ctx: BalancesContext, contracts: Contract[]) {\n  const balances: Balance[] = await getERC20BalanceOf(ctx, contracts as Token[])\n\n  // use the same amount for underlyings\n  for (const balance of balances) {\n    if (balance.amount > 0n && balance.underlyings) {\n      balance.underlyings[0] = { ...balance.underlyings[0], amount: balance.amount }\n    }\n  }\n\n  return balances\n}\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Only contracts the user interacted with are passed to ",(0,r.kt)("inlineCode",{parentName:"p"},"getBalances"),".")),(0,r.kt)("p",null,"A ",(0,r.kt)("strong",{parentName:"p"},"contract interaction")," is defined as follow:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"account made a transaction to this contract"),(0,r.kt)("li",{parentName:"ul"},"account received this token through event ",(0,r.kt)("inlineCode",{parentName:"li"},'"Transfer(address,address,uint256)"'))),(0,r.kt)("p",null,"In this example, this means ",(0,r.kt)("inlineCode",{parentName:"p"},"pools")," can be either ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," (the user haven't used any of these contracts) or a ",(0,r.kt)("inlineCode",{parentName:"p"},"subset")," of pools."),(0,r.kt)("p",null,"To help manage ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," values and resolve balances, we'll use ",(0,r.kt)("inlineCode",{parentName:"p"},"resolveBalances")," available in ",(0,r.kt)("inlineCode",{parentName:"p"},"@lib/balance"),'.\nThis function maps grouped contracts to a "resolver": a function that takes contracts in and return balances (contracts + amount) out.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/adapters/aave-v2/ethereum.ts"',title:'"/src/adapters/aave-v2/ethereum.ts"'},'import { getERC20BalanceOf } from "@lib/erc20";\nimport { resolveBalances } from "@lib/balance";\n\nexport const getBalances: GetBalancesHandler<typeof getContracts> = async (\n  ctx,\n  contracts\n) => {\n  const balances = await resolveBalances<typeof getContracts>(ctx, contracts, {\n    pools: getLendingPoolBalances,\n  });\n\n  return {\n    balances,\n  };\n};\n')))}p.isMDXComponent=!0}}]);